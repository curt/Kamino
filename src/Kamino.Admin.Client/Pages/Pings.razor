@page "/pings"
@using Kamino.Admin.Client.Models
@using Kamino.Admin.Client.Services
@inject IPingsService pingsService
@inject ISnackbar Snackbar

<PageTitle>Pings</PageTitle>

<MudCard Class="pa-4">
    <MudForm>
        <MudCardContent>
            <MudTextField T="string" Label="Ping Destination URL" Required="true" @bind-Value="pingUrl"></MudTextField>
        </MudCardContent>
        <MudCardActions>
            <MudButton Variant="Variant.Filled" Color="Color.Primary" OnClick="SendPing" Disabled="@sending">Send Ping
                @if (sending)
                {
                    <MudProgressCircular Class="ml-2" Color="Color.Default" Indeterminate="true" Size="Size.Small" />
                }
            </MudButton>
        </MudCardActions>
    </MudForm>
</MudCard>
<MudDataGrid Items="@pings" Breakpoint="Breakpoint.Sm" Class="pa-4 mt-4">
    <Columns>
        <TemplateColumn Title="Ping">
            <CellTemplate>
                <MudStack>
                    <MudText Typo="Typo.body2">@context.Item.PingCreatedAt</MudText>
                    <MudStack Row="true">
                        <MudAvatar Size="Size.Medium">
                            <MudImage Src="@context.Item.ActorIcon"
                                Alt="@($"{context.Item.ActorDisplayName ?? "Actor"} icon")"></MudImage>
                        </MudAvatar>
                        <MudStack Justify="Justify.Center" Spacing="0">
                            <MudText Typo="Typo.body1">@context.Item.ActorDisplayName</MudText>
                            <MudText Typo="Typo.body2">@context.Item.ActorUri</MudText>
                        </MudStack>
                    </MudStack>
                    <MudText Typo="Typo.caption">@context.Item.PingUri</MudText>
                </MudStack>
            </CellTemplate>
        </TemplateColumn>
        <TemplateColumn Title="Pong">
            <CellTemplate>
                <MudStack>
                    <MudText Typo="Typo.body2">@context.Item.PongCreatedAt</MudText>
                    <MudStack Row="true">
                        <MudAvatar Size="Size.Medium">
                            <MudImage Src="@context.Item.ToIcon"
                                Alt="@($"{context.Item.ToDisplayName ?? "Actor"} icon")"></MudImage>
                        </MudAvatar>
                        <MudStack Justify="Justify.Center" Spacing="0">
                            <MudText Typo="Typo.body1">@context.Item.ToDisplayName</MudText>
                            <MudText Typo="Typo.body2">@context.Item.ToUri</MudText>
                        </MudStack>
                    </MudStack>
                    <MudText Typo="Typo.caption">@context.Item.PongUri</MudText>
                </MudStack>
            </CellTemplate>
        </TemplateColumn>
    </Columns>
</MudDataGrid>

@code {
    private string pingUrl = string.Empty;
    private bool sending = false;
    private IEnumerable<PingApiModel> pings = [];

    protected override async Task OnInitializedAsync()
    {
        pings = await pingsService.GetPingsAsync();
    }

    private async Task SendPing()
    {
        sending = true;
        await Task.Delay(1);

        try
        {
            var success = await pingsService.SendPingAsync(pingUrl);

            if (success)
            {
                pingUrl = string.Empty;
                pings = await pingsService.GetPingsAsync();
            }
            else
            {
                Snackbar.Add($"Failure when sending ping", Severity.Error);
            }
        }
        catch (Exception exception)
        {
            Snackbar.Add($"Exception when sending ping: {exception.Message}", Severity.Error);
        }

        sending = false;
        await Task.Delay(1);
    }
}
